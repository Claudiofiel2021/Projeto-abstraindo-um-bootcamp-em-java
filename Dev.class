package br.com.dio.desafio.dominio;

import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;

public class Dev {
   private String nome;
   private Set conteudosInscritos = new LinkedHashSet();
   private Set conteudosConcluidos = new LinkedHashSet();

   public void inscreverBootcamp(Bootcamp bootcamp) {
      this.conteudosInscritos.addAll(bootcamp.getConteudos());
      bootcamp.getDevsInscritos().add(this);
   }

   public void progredir() {
      Optional conteudo = this.conteudosInscritos.stream().findFirst();
      if (conteudo.isPresent()) {
         this.conteudosConcluidos.add((Conteudo)conteudo.get());
         this.conteudosInscritos.remove(conteudo.get());
      } else {
         System.err.println("Você não está matriculado em nenhum conteúdo!");
      }

   }

   public double calcularTotalXp() {
      Iterator iterator = this.conteudosConcluidos.iterator();

      double soma;
      double next;
      for(soma = 0.0D; iterator.hasNext(); soma += next) {
         next = ((Conteudo)iterator.next()).calcularXp();
      }

      return soma;
   }

   public String getNome() {
      return this.nome;
   }

   public void setNome(String nome) {
      this.nome = nome;
   }

   public Set getConteudosInscritos() {
      return this.conteudosInscritos;
   }

   public void setConteudosInscritos(Set conteudosInscritos) {
      this.conteudosInscritos = conteudosInscritos;
   }

   public Set getConteudosConcluidos() {
      return this.conteudosConcluidos;
   }

   public void setConteudosConcluidos(Set conteudosConcluidos) {
      this.conteudosConcluidos = conteudosConcluidos;
   }

   public boolean equals(Object o) {
      if (this == o) {
         return true;
      } else if (o != null && this.getClass() == o.getClass()) {
         Dev dev = (Dev)o;
         return Objects.equals(this.nome, dev.nome) && Objects.equals(this.conteudosInscritos, dev.conteudosInscritos) && Objects.equals(this.conteudosConcluidos, dev.conteudosConcluidos);
      } else {
         return false;
      }
   }

   public int hashCode() {
      return Objects.hash(new Object[]{this.nome, this.conteudosInscritos, this.conteudosConcluidos});
   }
}
